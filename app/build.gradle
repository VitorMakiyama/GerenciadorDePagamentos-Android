apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-parcelize'
apply plugin: 'kotlin-kapt'
apply plugin: 'androidx.navigation.safeargs'

android {
    compileSdk 35

    defaultConfig {
        applicationId "com.makiyamasoftware.gerenciadordepagamentos"
        minSdkVersion 23
        targetSdkVersion 35
        versionCode 1
        versionName "0.9.1"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        vectorDrawables.useSupportLibrary = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    // Habilitar o data binding
    buildFeatures {
        dataBinding = true
        viewBinding = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.current()
        targetCompatibility JavaVersion.current()
    }

    namespace 'com.makiyamasoftware.gerenciadordepagamentos'
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"

    // Android KTX
    implementation "androidx.core:core-ktx:$coreVersion"

    // Support libraries
    implementation "androidx.appcompat:appcompat:$appcompatVersion"
    implementation "androidx.fragment:fragment-ktx:$fragmentVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion"

    // Room and Lifecycle dependencies
    implementation "androidx.room:room-runtime:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycleExtensionsVersion"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"

    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$navVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$navVersion"

    // CardView
    implementation 'androidx.cardview:cardview:1.0.0'

    // WorkManager
    implementation "androidx.work:work-runtime-ktx:$workVersion"

    // Dependencies for local unit tests
    testImplementation "junit:junit:$junitVersion" // JUnit, which is necessary for writing basic test statements.
    testImplementation "org.hamcrest:hamcrest-all:$hamcrestVersion"
    testImplementation "androidx.arch.core:core-testing:$archTestingVersion"
    testImplementation "org.robolectric:robolectric:$robolectricVersion"
    // Dependencies for Android instrumented unit tests
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion"

    // AndroidX Test - JVM testing - for simulated Android Framework components
    testImplementation "androidx.test.ext:junit-ktx:$androidXTestExtKotlinRunnerVersion"
    testImplementation "androidx.test:core-ktx:$androidXTestCoreVersion" // Core AndroidX test library
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion"
    testImplementation "androidx.work:work-testing:$workVersion"

    // AndroidX Test - Instrumented testing
    androidTestImplementation "androidx.test.ext:junit:$androidXTestExtKotlinRunnerVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    debugImplementation "androidx.fragment:fragment-testing:$fragmentVersion" // AndroidX test library for creating fragments in tests and changing their state.
    androidTestImplementation "androidx.test:core:$androidXTestCoreVersion"
    androidTestImplementation "org.mockito:mockito-core:$mockitoVersion"
    androidTestImplementation "com.linkedin.dexmaker:dexmaker-mockito:$dexMakerVersion" // This library is required to use Mockito in an Android project. Mockito needs to generate classes at runtime. On Android, this is done using dex byte code, and so this library enables Mockito to generate objects during runtime on Android.
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espressoVersion" // This library is made up of external contributions (hence the name) which contain testing code for more advanced views, such as DatePicker and RecyclerView. It also contains Accessibility checks and class called CountingIdlingResource that is covered later.
    androidTestImplementation "androidx.arch.core:core-testing:$archTestingVersion" //for testing Room
    androidTestImplementation "androidx.work:work-testing:$workVersion"

}